% Setup do Reposit√≥rio GNU Octave
% Descri√ß√£o: Configura paths e ambiente de trabalho
% Autor: Reposit√≥rio Octave
% Data: Janeiro 2025
% Vers√£o: 1.0

clear all;
close all;
clc;

fprintf('=== CONFIGURA√á√ÉO DO AMBIENTE OCTAVE ===\n');

% Obter diret√≥rio atual (raiz do reposit√≥rio)
repo_root = pwd;
fprintf('Diret√≥rio do reposit√≥rio: %s\n', repo_root);

% Adicionar subdiret√≥rios ao path
subdirs = {'utils', 'metrologia', 'estatistica', 'sinais', 'controle', 'templates'};

fprintf('\nAdicionando diret√≥rios ao path:\n');
for i = 1:length(subdirs)
    subdir_path = fullfile(repo_root, subdirs{i});
    if exist(subdir_path, 'dir')
        addpath(subdir_path);
        fprintf('  ‚úì %s\n', subdirs{i});
    else
        fprintf('  ‚ö† %s (n√£o encontrado)\n', subdirs{i});
    end
end

% Adicionar subdiret√≥rios recursivamente se necess√°rio
addpath(genpath(fullfile(repo_root, 'utils')));

% Configura√ß√µes do Octave
fprintf('\nConfigura√ß√µes aplicadas:\n');

% Formato de sa√≠da para n√∫meros
format long g;
fprintf('  ‚úì Formato num√©rico: long g\n');

% Configura√ß√µes de plot
set(0, 'DefaultFigureColor', 'white');
set(0, 'DefaultAxesFontSize', 12);
set(0, 'DefaultTextFontSize', 12);
set(0, 'DefaultLineLineWidth', 1.5);
fprintf('  ‚úì Configura√ß√µes de plot padr√£o\n');

% Verificar pacotes instalados
fprintf('\nVerificando pacotes:\n');
required_packages = {'statistics', 'signal', 'control'};
for i = 1:length(required_packages)
    pkg_name = required_packages{i};
    try
        pkg('load', pkg_name);
        fprintf('  ‚úì %s - carregado\n', pkg_name);
    catch
        fprintf('  ‚ö† %s - n√£o instalado ou erro ao carregar\n', pkg_name);
    end
end

% Criar diret√≥rios se n√£o existirem
dirs_to_create = {'data/exemplos', 'data/medicoes', 'data/resultados', ...
                  'metrologia/incertezas', 'estatistica/regressao', ...
                  'sinais/wavelets', 'controle/controladores'};

fprintf('\nCriando estrutura de diret√≥rios:\n');
for i = 1:length(dirs_to_create)
    dir_path = fullfile(repo_root, dirs_to_create{i});
    if ~exist(dir_path, 'dir')
        mkdir(dir_path);
        fprintf('  ‚úì Criado: %s\n', dirs_to_create{i});
    else
        fprintf('  ‚Üí Existe: %s\n', dirs_to_create{i});
    end
end

% Fun√ß√£o para salvar workspace
fprintf('\nFun√ß√µes utilit√°rias carregadas:\n');
fprintf('  - salvar_workspace(): Salva vari√°veis importantes\n');
fprintf('  - limpar_tudo(): Limpa workspace e figuras\n');
fprintf('  - info_sistema(): Mostra informa√ß√µes do sistema\n');

% Mostrar informa√ß√µes do sistema
fprintf('\n=== INFORMA√á√ïES DO SISTEMA ===\n');
fprintf('Vers√£o do Octave: %s\n', version);
fprintf('Diret√≥rio de trabalho: %s\n', pwd);
fprintf('Mem√≥ria dispon√≠vel: %.2f MB\n', memory().Total / 1024 / 1024);

fprintf('\nüéâ Ambiente configurado com sucesso!\n');
fprintf('Digite "help nome_funcao" para ajuda sobre fun√ß√µes espec√≠ficas.\n\n');

% Salvar configura√ß√£o
save('config_workspace.mat', 'repo_root', 'subdirs');

% Definir fun√ß√µes utilit√°rias globais
function salvar_workspace()
    save('workspace_backup.mat');
    fprintf('Workspace salvo em workspace_backup.mat\n');
end

function limpar_tudo()
    clear all;
    close all;
    clc;
    fprintf('Workspace e figuras limpos!\n');
end

function info_sistema()
    fprintf('=== INFORMA√á√ïES DO SISTEMA ===\n');
    fprintf('Octave: %s\n', version);
    fprintf('SO: %s\n', computer);
    fprintf('Data/Hora: %s\n', datestr(now));
    fprintf('Diret√≥rio: %s\n', pwd);
    mem_info = memory();
    fprintf('Mem√≥ria: %.2f MB usados / %.2f MB total\n', ...
            mem_info.MemUsedMATLAB/1024/1024, mem_info.Total/1024/1024);
end 